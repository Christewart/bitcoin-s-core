akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  # log-config-on-start = on

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on

      # enable DEBUG logging of unhandled messages
      unhandled = on

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
    }
  }
}

commonDbSettings {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  profile = "slick.jdbc.SQLiteProfile$"
  db {
    driver="org.sqlite.JDBC"
    user = "nodedb"
  }
}

databaseUrl = ${commonDbSettings}
databaseUrl {
  db {
    url="jdbc:sqlite:"${HOME}"/.bitcoin-s/mainnet/nodedb.sqlite"
  }
}

testNet3DatabaseUrl = ${commonDbSettings}
testNet3DatabaseUrl {
  db {
    url="jdbc:sqlite:"${HOME}"/.bitcoin-s/testnet3/nodedb.sqlite"
  }
}
regTestDatabaseUrl = ${commonDbSettings}
regTestDatabaseUrl {
  db {
    url="jdbc:sqlite:"${HOME}"/.bitcoin-s/regtest/nodedb.sqlite"
  }
}


unitTestDatabaseUrl = ${commonDbSettings}

unitTestDatabaseUrl {
  db {
    url="jdbc:sqlite:"${HOME}"/.bitcoin-s/unittest/nodedb.sqlite"
    connectionPool = disabled
    keepAliveConnection = true
  }
}
